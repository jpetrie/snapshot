*snapshot.txt*                                        Simple session management.
==============================================================================

INTRODUCTION                                                          *snapshot*
Snapshot augments Neovim's built-in session management functionality with a
few convenience features:

 - Quick session save and load commands that write standard Neovim session
   files to a central directory. Sessions are bound to Neovim's current
   working directory.
 - Opt-in automatic saving and loading of sessions (on |VimEnter| and
   |VimLeavePre|, respectively) under a set of allowed directories. Automatic
   session load is skipped when the argument list is non-empty. When Neovim
   is started headless (no attached UIs), automatic save and load will both
   be skipped.


CONFIGURATION                                                 *snapshot.options*
Snapshot supports the following options:

                                                  *snapshot.options.session_dir*
    session_dir: ~
        The full path to the directory where Snapshot should store session data.
        The default value is "session" underneath the "state" `standard-path`.

                                                  *snapshot.options.allow_paths*
    allow_paths: ~
        A list of full paths where automatic session save/load is allowed.
        The default value is an empty list, which prevents Snapshot from
        automatically saving or loading any sessions.

                                               *snapshot.options.hooks.pre_save*
    hookspre_save: ~
        A function invoked just prior to writing a session file. Will be called
        with a single argument: the full path to the session file.
        The default value is nil.

                                              *snapshot.options.hooks.post_save*
    hooks.post_save: ~
        A function invoked just after writing a session file. Will be called
        with a single argument: the full path to the session file.
        The default value is nil.

                                               *snapshot.options.hooks.pre_load*
    hooks.pre_load: ~
        A function invoked just prior to reading a session file. Will be called
        with a single argument: the full path to the session file.
        The default value is nil.

                                              *snapshot.options.hooks.post_load*
    hooks.post_load: ~
        A function invoked just after reading a session file. Will be called
        with a single argument: the full path to the session file.
        The default value is nil.


COMMANDS                                                     *snapshot.commands*
Snapshot provides two commands:

|SnapSave|                                                           *:SnapSave*
    Saves the session for the current directory.

|SnapLoad|                                                           *:SnapLoad*
    Loads the session for the current directory.


LUA API                                                           *snapshot.lua*
Snapshot provides the following Lua API:

|snapshot.setup({opts})|                                      *snapshot.setup()*
    Snapshot's setup function, which must be run by the user (if not using a
    plugin manager that does so).

    Usage:
>lua
    require("snapshot").setup({
      -- options go here
    })
<

|snapshot.save()|                                              *snapshot.save()*
    Saves the session for the current directory, as with `:SnapSave`.

|snapshot.load()|                                              *snapshot.load()*
    Loads the session for the current directory, as with `:SnapLoad`.

